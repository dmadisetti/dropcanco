#!/bin/bash
show_help(){
    echo '
    Why Hello there! You must be looking for help
    
    The Flags: 

    r - run all

    a - create all
    
    s - stop particular Container
    
    n - new particular container 

    c - start particular container

    d - debug mode

    m - run bash for mysql container

    x - dont run this unless docker is f-ed

    p - like a phoenix from the ashes, burn, BURN, and become something greater

    h - Dunno. Run and find out.

    Chain em together as you see fit 
    '
}

# Quick script to get db
# ssh u71655795@personificate.com
# LD2apriori450
# mysqldump -hdb497389632.db.1and1.com -udbo497389632 -pLD2apriori450 db497389632 > db-backup/dropcanco.sql
# scp u71655795@personificate.com:db-backup/dropcanco.sql database/seed.sql

# Quick script to get assets
# scp -rpq u71655795@personificate.com:dropcanco ./

run(){
    mysql
    hhvm
    nginx
}

prod(){
    SCRIPT="run"
    run    
}
dev(){
    SCRIPT="debug"
    run    
}

nginx(){

    # Silently kill
    sudo docker stop nginx>/dev/null 2>/dev/null
    sudo docker rm nginx>/dev/null 2>/dev/null

    CONTAINER="server"
    V=`version`
    echo "Starting Nginx Container: $(sudo docker run -d -p 80:80 --name nginx --link hhvm:hhvm --volumes-from hhvm -v `pwd`/server/sites-enabled:/etc/nginx/sites-enabled:rw $CONTAINER:$V /bin/server)"

}

mysql(){

    # Silently kill
    sudo docker stop mysql>/dev/null 2>/dev/null
    sudo docker rm mysql>/dev/null 2>/dev/null

    CONTAINER="database"
    V=`version`
    echo "Starting Mysql Container: $(sudo docker run -d -p 3306:3306 --name mysql -v `pwd`/database/mysql:/var/lib/mysql:rw $CONTAINER:$V /bin/$SCRIPT)"

}

hhvm(){

    # Silently kill
    sudo docker stop hhvm >/dev/null 2>/dev/null
    sudo docker rm hhvm >/dev/null 2>/dev/null
    
    CONTAINER="core"
    V=`version`
    echo "Starting Hiphop Container: $(sudo docker run -d -p 1337:1337 --name hhvm --link mysql:mysql -v `pwd`/core:/core:rw $CONTAINER:$V /bin/$SCRIPT)"

}

db(){

    database/db.sh

}

version(){
    if [[ "$CONTAINER" == "core" || "$CONTAINER" == "server" || "$CONTAINER" == "database" ]]
    then
        sudo docker images | grep -o "$CONTAINER\s*[0-9]*" -m 1 | grep -o [0-9]*
        return
    fi
    echo "invalid container: $CONTAINER"
    exit 1
}

core(){
    CONTAINER="core"
    V=$((`version` + 1))
    cd core
    sudo docker build -t core:$V . 
    cd ..
}

database(){
    CONTAINER="database"
    V=$((`version` + 1))
    cd database
    sudo docker build -t database:$V . 
    cd ..
}

server(){
    CONTAINER="server"
    V=$((`version` + 1))
    cd server
    sudo docker build -t server:$V . 
    cd ..
}

prompt(){
    printf "\nChoose a container...\nCTRL+C to exit:\n"
    select create in core server database
    do
        # bash reflection say what?
        eval "$create" || exit 1
        exit 0
    done

}

stop(){
    printf "\nStop a container...\n"
    select stop in core server database
    do
        sudo docker stop $(sudo docker ps | grep -o ".*\s$stop:" | grep -o '\([0-9a-f]\)\{12\}')
    done
}

contain(){
    printf "\Run image...\nCTRL+C to exit:\n"
    select image in hhvm nginx mysql
    do
        export SCRIPT="debug"
        # bash reflection say what?
        eval "$image" || exit 1

    done
}

die(){
    echo "Killing..."
    sudo docker stop $(sudo docker ps | grep -o ".*\s" | grep -o '\([0-9a-f]\)\{12\}')
    echo "------------"
}

all(){

    core
    server
    database

}

fuckitall(){

    sudo docker stop $(sudo docker ps -a -q)
    sudo docker rm   $(sudo docker ps -a -q)
    sudo docker rmi  $(sudo docker images -a -q)

}

phoenix(){

    fuckitall
    all

}

CONTAINER="core"
V=`version`
while getopts "h?rnsdiklcxoampv:" opt; do
    case "$opt" in
    h|\?)
        show_help
        ;;
    r)  prod
        ;;
    v)  CONTAINER="$OPTARG";echo "`version`";
        ;;
    n)  prompt
        ;;
    s)  stop
        ;;
    k)  die
        ;;
    x)  fuckitall
        ;;
    d)  dev
        ;;
    m)  db
        ;;
    c)  contain
        ;;
    p)  phoenix # just ran out of letters at this point
        ;;
    a)  all
        ;;
    esac
done

exit 0
